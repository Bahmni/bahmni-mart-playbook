
- name: set authentication parameter from the tag
  set_fact:
    authentication: true
  tags:
  - authentication

- name: Check if bahmni-mart rpm is installed
  yum:
    list: bahmni-mart
  register: installed_bahmni_mart
  ignore_errors: true

- name: Check the version of existing bahmni-mart if present
  shell: yum list installed | grep bahmni-mart | awk '{print $ 2}'
  register: current_version
  when: installed_bahmni_mart.results|length !=0
  ignore_errors: true

- name: Check if remote url is valid
  yum: name="{{ bahmni_mart_url }}" state=present
  register: isUrlValid
  when: installed_bahmni_mart.results|length !=0
  ignore_errors: true

- name: Uninstall bahmni-mart rpm if update is required
  yum: name="bahmni-mart" state=absent
  when: installed_bahmni_mart.results|length !=0 and current_version.stdout != "{{ bahmni_mart_version }}" and isUrlValid.failed == false
  register: uninstalled_bahmni_mart

- name: Install bahmni-mart using URL
  yum: name="{{ bahmni_mart_url }}" state=present
  when: uninstalled_bahmni_mart.changed or installed_bahmni_mart.results|length == 0

- name: Copy logback.xml file
  copy:
    src: "{{ role_path }}/files/logback-spring.xml"
    dest: "{{ bahmni_mart_logback_xml_path }}"
    mode: "644"
    owner: "{{ bahmni_user }}"
    group: "{{ bahmni_group }}"

- name: Set bahmni_mart_scdf_schema_name
  set_fact:
    bahmni_mart_scdf_schema_name: 'public'
  when: groups['bahmni-mart-scdf'] is not defined or groups['bahmni-mart-scdf']|length == 0

- name: Copy bahmni-mart config
  template:
    src=application.properties.j2
    dest=/opt/bahmni-mart/properties/application.properties
    mode=644
    owner={{ bahmni_user }}
    group={{ bahmni_group }}

- name: Create bahmni-mart DB User
  postgresql_user:
    name: "{{ analytics_db_user }}"
    password: "{{ analytics_db_password }}"
  when: (passive is not defined or passive !='yes') and authentication is not defined or authentication != true

- name: Create bahmni-mart DB User with authentication
  postgresql_user:
    name: "{{ analytics_db_user }}"
    password: "{{ analytics_db_password }}"
    login_password: "{{ postgres_password }}"
  when: (passive is not defined or passive !='yes') and  authentication is defined and authentication == true

- name: Create bahmni-mart DB
  postgresql_db:
    name: "{{ analytics_db_name }}"
    owner: "{{ analytics_db_user }}"
  when: (passive is not defined or passive !='yes') and authentication is not defined or authentication != true

- name: Create bahmni-mart DB with authentication
  postgresql_db:
    name: "{{ analytics_db_name }}"
    owner: "{{ analytics_db_user }}"
    login_password: "{{ postgres_password }}"
  when: (passive is not defined or passive !='yes') and authentication is defined and authentication == true

- name: Create backup directory
  file:
    path: /data/analytics
    mode: 0666
    owner: "{{ bahmni_user }}"
    group: "{{ bahmni_group }}"
    state: directory

- name: Copy bahmni-mart-backup script
  template:
    src=bahmni-mart-backup.sh.j2
    dest=/opt/bahmni-mart/bin/bahmni-mart-backup.sh
    mode=755
    owner={{ bahmni_user }}
    group={{ bahmni_group }}

- name: Copy bahmni-mart-restore script
  template:
    src=bahmni-mart-restore.sh.j2
    dest=/opt/bahmni-mart/bin/bahmni-mart-restore.sh
    mode=755
    owner={{ bahmni_user }}
    group={{ bahmni_group }}
