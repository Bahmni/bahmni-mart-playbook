# This is copied from bahmni-playbooks and will be deleted after merged with bahmni.
- name: Install python-psycopg2
  yum: name=python-psycopg2 state=present

- name: Check Bahmni-installer version on command box
  local_action: command rpm -q bahmni-installer --qf "%{VERSION}\n"
  register: bahmniVersion


- block:

    - name: Check if postgres92 yum repo rpm is present {{ bahmniVersion.stdout }}
      stat: path={{postgres92_repo_rpm_location}}
      register: postgresRepoRpm

    - name: Download postgres92 yum repo rpm if not present
      command: "wget -q -O {{ postgres92_repo_rpm_location }} {{postgres92_repo_download_url}} creates={{ postgres92_repo_rpm_location }}"
      when: postgresRepoRpm.stat.exists == false

    - name: Install postgresql92 yum repository
      yum: name={{postgres92_repo_rpm_location}} state=present

    - name: Install postgresql92
      yum: name="postgresql92-server" state=present

    - name: Install postgresql92-contrib
      yum: name="postgresql92-contrib" state=present

    - name: Register postgres version as 9.2
      set_fact:
         postgres_version: "{{postgres92_version}}"
         postgres_bin_version: "{{postgres92_bin_version}}"

  when: bahmniVersion.stdout == "0.91"


- block:

    - name: Check if postgres96 yum repo rpm is present
      stat: path={{postgres96_repo_rpm_location}}
      register: postgresRepoRpm

    - name: Download postgres96 yum repo rpm if not present
      command: "wget -q -O {{ postgres96_repo_rpm_location }} {{postgres96_repo_download_url}} creates={{ postgres96_repo_rpm_location }}"
      when: postgresRepoRpm.stat.exists == false

    - name: Install postgresql96 yum repository
      yum: name={{postgres96_repo_rpm_location}} state=present

    - name: Install postgresql96
      yum: name="postgresql96-server" state=present

    - name: Install postgresql96-contrib
      yum: name="postgresql96-contrib" state=present

    - name: Register postgres version as 9.6
      set_fact:
        postgres_version: "{{postgres96_version}}"
        postgres_bin_version: "{{postgres96_bin_version}}"

  when: bahmniVersion.stdout != "0.91"

- name: Initiate database {{postgres_version}}
  command: /usr/pgsql-{{postgres_version}}/bin/postgresql{{postgres_bin_version}}-setup initdb creates=/var/lib/pgsql/{{postgres_version}}/data/postgresql.conf

- name: Copy postgresql conf
  template:
    src=postgresql.conf.j2
    dest=/var/lib/pgsql/{{ postgres_version }}/data/postgresql.conf
    owner=postgres
    group=postgres
    mode=644
  register: postgres_conf

- name: insert/update postgres config after "local" is for Unix domain socket connections only line
  lineinfile:
    dest: /var/lib/pgsql/{{ postgres_version }}/data/pg_hba.conf
    regexp: '^local\s+all\s+all\s+peer'
    state: present
    backrefs: yes
    line: local  all    all   trust

- name: insert/update postgres config after IPv4 local connections line
  lineinfile:
    dest: /var/lib/pgsql/{{ postgres_version }}/data/pg_hba.conf
    regexp: '^host\s+all\s+all\s+127.0.0.1/32\s+ident'
    state: present
    backrefs: yes
    line: host  all    all   127.0.0.1/32 trust

- name: insert/update postgres config after IPv6 local connections line
  lineinfile:
    dest: /var/lib/pgsql/{{ postgres_version }}/data/pg_hba.conf
    regexp: '^host\s+all\s+all\s+::1/128\s+ident'
    state: present
    backrefs: yes
    line: host  all    all   ::1/128 trust


- name: Removing recovery config file from master db
  file:
      path=/var/lib/pgsql/{{ postgres_version }}/data/recovery.conf
      state=absent
  when: inventory_hostname in groups['bahmni-mart-db'] or inventory_hostname in groups['metabase-db']
  register: recovery_conf

- block:

    - name: Get matched IpTable rule
      shell: iptables -nL --line-numbers | grep POSTGRES  -m 1 | cut -c 1-2
      register: matchedRule

    - name: delete matching rule if exists
      shell: iptables -D INPUT {{ matchedRule.stdout }}
      when: matchedRule.stdout!=""

    - name: Allow postgres port through firewall
      command: /sbin/iptables -I INPUT 1 -p tcp --dport  5432 -j ACCEPT -m comment --comment "POSTGRES"

    - name: save iptables
      command: service iptables save

  when: docker is not defined

- name: Stop PostgreSQL
  service:
    name=postgresql-{{ postgres_version }}
    state=stopped
  when: postgres_conf.changed==true or (recovery_conf is defined and recovery_conf.changed==true)

- name: Start PostgreSQL and enable at boot
  service:
    name=postgresql-{{ postgres_version }}
    enabled=yes
    state=started

- name: Create postgres user
  postgresql_user: name={{ postgres_user }} role_attr_flags=CREATEDB,NOCREATEROLE,SUPERUSER,REPLICATION
  sudo_user: postgres
  when: postgres_user is defined and (inventory_hostname in groups['bahmni-mart-db'] or inventory_hostname in groups['metabase-db'])
# creating user only in master dbs. User creation will be replicated in slave.